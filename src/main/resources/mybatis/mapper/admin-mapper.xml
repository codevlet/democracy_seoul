<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
  	<!-- SQL QUERYS -->
  	
  	<!-- 관리자 로그인 -->
  	<select id="selectLoginAdmin" parameterType="admin" resultType="admin">
  		SELECT 
  			admin_no as adminNo,
  			admin_id as adminId,
  			admin_pwd as adminPwd,
  			admin_name as adminName,
  			admin_grade as adminGrade,
  			admin_date as adminDate,
  			admin_email as adminEmail,
  			admin_depart as adminDepart
  		FROM
  			admin
  		WHERE admin_id = #{adminId} and admin_pwd = #{adminPwd} and admin_grade != 'W' 
  	</select>
  	
  	<!-- 관리자 정보 수정 -->
  	<update id="adminUpdate" parameterType="admin">
		UPDATE
			ADMIN
		SET
			admin_Email = #{adminEmail}
		WHERE
			ADMIN_ID = #{adminId}
	</update>
  	
  	<!-- 관리자 비밀번호 변경 -->
  	<update id="updatePassword" parameterType="hashmap">
		UPDATE
			ADMIN
		SET
			admin_Pwd = #{adminNewPass}
		WHERE
			admin_Id = #{adminId} AND admin_Pwd = #{adminOriginalPass}
	</update>
	
	
	<!-- 관리자 탈퇴 -->
	<update id="updateWithdraw" parameterType="hashmap">
		UPDATE
			ADMIN
		SET
			ADMIN_GRADE = 'W'
		WHERE 
			ADMIN_ID = #{adminId} AND ADMIN_PWD = #{adminPwd}
	</update>
	
	<!-- 관리자 가입 -->
	<insert id="insertAdminMember" parameterType="admin">
		INSERT INTO 
			ADMIN 
		VALUES (ADMIN_SEQ.NEXTVAL, #{adminId}, #{adminPwd}, #{adminName}, '1', current_date, #{adminEmail}, '기획부')
	</insert>
	
	<!-- 관리자 ID 중복 체크 -->
	<select id="selectAdminIdCheck" resultType="admin">
		SELECT 
			admin_no as adminNo,
			admin_id as adminId,
			admin_pwd as adminPwd,
			admin_name as adminName,
			admin_grade as adminGrade,
			admin_date as adminDate,
			admin_email as adminEmail,
			admin_depart as adminDepart
		FROM
			ADMIN
		WHERE ADMIN_ID = #{value}
	</select>
	
	<!-- 모든 회원 정보 가져오기 -->
	<select id="selectAllMemberList" resultType="member">
		SELECT 
			userid as userId,
			username as userName,
			nick as nick,
			email as email,
			enrolldate as enrollDate,
			end_yn as endYN
		FROM
			MEMBER
	</select>
	
	<!-- 탈퇴 여부 버튼 바꾸기 -->
	<update id="updateMemberEndYNChange" parameterType="hashmap">
		UPDATE
			MEMBER
		SET
			end_yn = #{endYN}
		WHERE
			userId = #{userId}
	</update>
	
	<!-- 페이지 안에 들어갈 목록 갯수 -->
	<select id="selectAllPostList" resultType="member">
	  	SELECT 
	  		userid as userId,
			username as userName,
			nick as nick,
			email as email,
			enrolldate as enrollDate,
			end_yn as endYN
	  	FROM MEMBER 
		ORDER BY USERID ASC
	  </select>
	
	<!-- totalCount 필요한 로직 -->
	<select id="selectMemberTotalCount" resultType="int">
	  	SELECT 
	  		COUNT(*)
	  	FROM MEMBER
		WHERE END_YN='N' 
		ORDER BY USERID ASC
	</select>
  	
</mapper>
